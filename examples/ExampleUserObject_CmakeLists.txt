#common cmake stuff
cmake_minimum_required (VERSION 2.6)
project (pxl-module)

#Add the path to the FindPXL.cmake file here - or copy it to the module
#directory and use the line below
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}")

#name of the pxl-module
SET(PXLMODULENAME ExampleUserObject)

#files to be added to the module library
add_library(${PXLMODULENAME} SHARED 
	ExampleUserObject.cpp 
	)

#check for pxl
FIND_PACKAGE(PXL)
INCLUDE (Python.cmake)

#insert needed plugins here
#ADD_PXL_PLUGIN(pxl-astro)
#ADD_PXL_PLUGIN(pxl-hep)
ADD_PXL_PLUGIN(pxl-core)

#add additional external libraries as needed
include_directories(
        ${PXL_INCLUDE_DIRS}
				${PYTHON_INCLUDE_PATH}
        )
link_directories(
        ${PXL_LIBRARIES}
        )
target_link_libraries (${PXLMODULENAME}
        ${PXL_LIBRARIES}
        )

SET_TARGET_PROPERTIES(${PXLMODULENAME} PROPERTIES COMPILE_FLAGS -fPIC)

#set install destination
INSTALL(TARGETS ${PXLMODULENAME} LIBRARY DESTINATION
	${PXL_PLUGIN_INSTALL_PATH})



#
# SWIG
#
FIND_PACKAGE(SWIG REQUIRED)
INCLUDE(${SWIG_USE_FILE})

IF(SWIG_version_output VERSION_LESS 1.3.30)
    SET(SWIG_SELF "self")
ELSE()
    SET(SWIG_SELF "$self")
ENDIF()

SET(SWIG_FLAGS "-Wall" "-fvirtual")

CONFIGURE_FILE(${PXLMODULENAME}.in ${CMAKE_SOURCE_DIR}/${PXLMODULENAME}.i)

SET(SWIG_MODULE_${PXLMODULENAME}_EXTRA_DEPS "ExampleUserObject.h" )
SET_SOURCE_FILES_PROPERTIES("${PXLMODULENAME}.i" PROPERTIES CPLUSPLUS ON)

SET(SWIG_FLAGS "-Wall" "-fvirtual")
SET_PROPERTY(SOURCE ${PXLMODULENAME}.i APPEND PROPERTY SWIG_FLAGS ${SWIG_FLAGS})
SWIG_ADD_MODULE(${PXLMODULENAME} python ${PXLMODULENAME}.i
	${PXL_INCLUDE_DIRS} ".")

target_link_libraries(${SWIG_MODULE_ExampleUserObject_REAL_NAME} ${PXLMODULENAME} ${PYTHON_LIBRARIES})
